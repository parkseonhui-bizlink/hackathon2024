// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  name         String
  projects     Project[]
  ProjectUser  ProjectUser[]
  ProjectOwner ProjectOwner[]
}

model Project {
  id           Int            @id @default(autoincrement())
  title        String
  description  String
  ownerId      Int
  owner        ProjectOwner[]
  user         User[]
  skills       Skill[]
  ProjectUser  ProjectUser[]
  ProjectSkill ProjectSkill[]
}

model ProjectOwner {
  id        Int     @id @default(autoincrement())
  projectId Int
  userId    Int
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model ProjectUser {
  id        Int     @id @default(autoincrement())
  projectId Int
  userId    Int
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Skill {
  id           Int            @id @default(autoincrement())
  name         String
  category     String
  projects     Project[]
  ProjectSkill ProjectSkill[]
}

model ProjectSkill {
  id        Int     @id @default(autoincrement())
  projectId Int
  skillId   Int
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  skill     Skill   @relation(fields: [skillId], references: [id], onDelete: Cascade)
}
